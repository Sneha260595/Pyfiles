class Node:
  def __init__(self, value, next_node=None):
    self.value = value
    self.next_node = next_node
    
  def set_next_node(self, next_node):
    self.next_node = next_node
    
  def get_next_node(self):
    return self.next_node
  
  def get_value(self):
    return self.value



from node import Node

class Stack:
  def __init__(self,limit=1000):
    self.top_item=None
    self.limit=limit
    self.size=0

  def push(self,value):
    item= Node(value)
    item.set_next_node(self.top_item)
    self.top_item=item

  def pop(self,value):
    if self.size >0:

     item_to_be_removed=self.top_item
     self.top_item=item_to_be_removed.get_next_node()
     self.size-=1
     return item_to_be_removed.get_value()
    else:
      print("stack empty")

  def peak(self, value):
    if self.size>0:
      return self.top_item.get_value()

    else:
      print("Stack empty")
